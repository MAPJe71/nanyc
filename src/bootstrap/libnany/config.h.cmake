#pragma once
#include <stdint.h>

/* NOTE: this file is generated by cmake */

/*! Nany default website */
#define LIBNANY_WEBSITE  "@nany_website_url@"

/*! C++ compiler */
#define LIBNANY_BOOTSTRAP_CXX_COMPILER   "@CMAKE_CXX_COMPILER@"


/*! Nany version version major */
#define LIBNANY_VERSION_MAJOR  @nany_version_major@

/*! Nany version version minor */
#define LIBNANY_VERSION_MINOR  @nany_version_minor@

/*! Nany version version patch */
#define LIBNANY_VERSION_PATCH  @nany_version_patch@

/*! Nany version prerelease */
#define LIBNANY_VERSION_PRERELEASE "@nany_version_prerelease@"

/*! Nany version metadata */
#define LIBNANY_VERSION_METADATA "@nany_version_metadata@"

/*! Nany version string */
#define LIBNANY_VERSION_STR "@nany_version_string@"




#ifdef __cplusplus

namespace Nany
{
namespace Config
{

	//! The maximum number of nested namespaces
	static constexpr uint32_t maxNamespaceDepth = 32;

	//! Maximum number of parameters when declaring a function
	static constexpr uint32_t maxFuncDeclParameterCount = 7;

	//! Maximum length for a symbol name
	static constexpr uint32_t maxSymbolNameLength = 64;

	//! Maxmimum number of pushed parameters for calling a function
	static constexpr uint32_t maxPushedParameters = 32;



	//! Enable verbose mode
	static constexpr bool hasVerbose = true;

	//! Remove redundant dbg info (line,offset) in opcode programs
	static constexpr bool removeRedundantDbgOffset = true;




	namespace Traces
	{

		//! Enable all traces
		static constexpr bool all = false;

		//! Print ATOM table
		static constexpr bool printAtomTable = all or false;

		//! Print classdef table
		static constexpr bool printClassdefTable = all or false;

		//! Print opcodes generated from AST
		static constexpr bool printSourceOpcodeProgram = all or false;

		//! Print opcodes after program instanciation
		static constexpr bool printGeneratedOpcodeProgram = all or false;

	} // namespace Traces



} // namespace Config
} // namespace Nany

#endif /* C++ */
